{"version":3,"file":"app.module.js","sourceRoot":"/","sources":["src/app.module.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,2CAAwC;AACxC,6CAAgD;AAChD,2CAA8C;AAC9C,qDAAiD;AACjD,+CAA2C;AAC3C,qEAA4C;AAC5C,8EAAyE;AACzE,qCAAwD;AACxD,+EAAsD;AACtD,0FAAqF;AACrF,4DAAwD;AACxD,oDAAgD;AAChD,+DAA2D;AAC3D,uDAAmD;AACnD,uEAA8C;AAC9C,6DAAyD;AACzD,oEAAgE;AAChE,oDAAgD;AAChD,yEAAqE;AACrE,0DAAsD;AACtD,0DAAsD;AACtD,iEAA6D;AA4BtD,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG,CAAA;AAAZ,8BAAS;oBAAT,SAAS;IA3BrB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,CAAC;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,CAAC,oBAAS,EAAE,yBAAc,EAAE,qBAAU,CAAC;gBAC7C,WAAW,EAAE,CAAC,MAAM,CAAC;aACtB,CAAC;YACF,uBAAa,CAAC,YAAY,CAAC;gBACzB,QAAQ,EAAE,6CAAoB;gBAC9B,iBAAiB,EAAE,KAAK,EAAE,OAA0B,EAAE,EAAE;oBACtD,MAAM,UAAU,GAAG,MAAM,IAAI,oBAAU,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;oBAC9D,OAAO,UAAU,CAAC;gBACpB,CAAC;aACF,CAAC;YACF,wBAAU;YACV,0BAAW;YACX,8BAAa;YACb,kCAAe;YACf,wBAAU;YACV,sCAAiB;YACjB,4BAAY;YACZ,4BAAY;YACZ,gCAAc;SACf;QACD,WAAW,EAAE,CAAC,8BAAa,EAAE,gCAAc,EAAE,kCAAe,CAAC;QAC7D,SAAS,EAAE,CAAC,yDAA0B,EAAE,wBAAU,CAAC;KACpD,CAAC;GACW,SAAS,CAAG","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport appConfig from './config/app.config';\r\nimport { TypeOrmConfigService } from './database/typeorm-config.service';\r\nimport { DataSource, DataSourceOptions } from 'typeorm';\r\nimport databaseConfig from './config/database.config';\r\nimport { DatabaseInitializerService } from './database/database-initializer.service';\r\nimport { AuthController } from './auth/auth.controller';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { UsersController } from './users/users.controller';\r\nimport { UsersModule } from './users/users.module';\r\nimport authConfig from './config/auth.config';\r\nimport { EncryptModule } from './encrypt/encrypt.module';\r\nimport { CopyTradeModule } from './copy-trade/copytrade.module';\r\nimport { PlanModule } from './plan/plan.module';\r\nimport { TransactionModule } from './transaction/transaction.module';\r\nimport { UploadModule } from './upload/upload.module';\r\nimport { WalletModule } from './wallet/wallet.module';\r\nimport { MyWalletModule } from './my-wallet/myWallet.module';\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [appConfig, databaseConfig, authConfig],\r\n      envFilePath: ['.env'],\r\n    }),\r\n    TypeOrmModule.forRootAsync({\r\n      useClass: TypeOrmConfigService,\r\n      dataSourceFactory: async (options: DataSourceOptions) => {\r\n        const dataSource = await new DataSource(options).initialize();\r\n        return dataSource;\r\n      },\r\n    }),\r\n    AuthModule,\r\n    UsersModule,\r\n    EncryptModule,\r\n    CopyTradeModule,\r\n    PlanModule,\r\n    TransactionModule,\r\n    UploadModule,\r\n    WalletModule,\r\n    MyWalletModule,\r\n  ],\r\n  controllers: [AppController, AuthController, UsersController],\r\n  providers: [DatabaseInitializerService, AppService],\r\n})\r\nexport class AppModule {}\r\n"]}