{"version":3,"file":"google-strategy.js","sourceRoot":"/","sources":["src/auth/strategies/google-strategy.ts"],"names":[],"mappings":"","sourcesContent":["// /* eslint-disable prettier/prettier */\r\n// import { Inject, Injectable } from '@nestjs/common';\r\n// import { ConfigService } from '@nestjs/config';\r\n// import { PassportStrategy } from '@nestjs/passport';\r\n// import { Profile, Strategy } from 'passport-google-oauth20';\r\n// import { AllConfigType } from 'src/config/config.type';\r\n// import { Services } from '@app/utils/constants';\r\n// import { IAuthService } from '../auth';\r\n\r\n// @Injectable()\r\n// export class GoogleStrategy extends PassportStrategy(Strategy) {\r\n//   constructor(\r\n//     private configService: ConfigService<AllConfigType>,\r\n//     @Inject(Services.AUTH_GOOGLE) private readonly authService: IAuthService,\r\n//   ) {\r\n//     super({\r\n//       clientID: configService.get<string>('google.clientId', {\r\n//         infer: true,\r\n//       }),\r\n//       clientSecret: configService.get<string>('google.clientSecret', {\r\n//         infer: true,\r\n//       }),\r\n//       callbackURL: configService.get<string>('google.callbackURL', {\r\n//         infer: true,\r\n//       }),\r\n//       scope: ['profile', 'email'],\r\n//     });\r\n//   }\r\n\r\n//   // async validate(accessToken: string, refreshToken: string, profile: Profile) {\r\n//   //   console.log(accessToken);\r\n//   //   console.log(refreshToken);\r\n//   //   console.log(profile);\r\n\r\n//   //   const user = await this.authService.validateSocialLogin(\r\n//   //     AuthProvidersEnum.google,\r\n//   //     {\r\n//   //       id: profile.id,\r\n//   //       name: profile.displayName,\r\n//   //       email: profile.emails[0].value,\r\n//   //       picture: profile.photos[0].value,\r\n//   //     },\r\n//   //   );\r\n//   //   console.log('Validate');\r\n//   //   console.log(user);\r\n//   //   return user || null;\r\n//   // }\r\n// }\r\n"]}