{"version":3,"file":"jwt-refresh.strategy.js","sourceRoot":"/","sources":["src/auth/strategies/jwt-refresh.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,+CAAoD;AACpD,2CAAmE;AACnE,+CAAoD;AACpD,2CAA+C;AAMxC,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,IAAA,2BAAgB,EACtD,uBAAQ,EACR,aAAa,CACd;IACC,YAAoB,aAA2C;QAC7D,KAAK,CAAC;YACJ,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,oBAAoB,EAAE;gBAC3D,KAAK,EAAE,IAAI;aACZ,CAAC;SACH,CAAC,CAAC;QANe,kBAAa,GAAb,aAAa,CAA8B;IAO/D,CAAC;IAEM,QAAQ,CACb,OAA8B;QAE9B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;YACvB,MAAM,IAAI,8BAAqB,EAAE,CAAC;QACpC,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAA;AAtBY,gDAAkB;6BAAlB,kBAAkB;IAD9B,IAAA,mBAAU,GAAE;qCAKwB,sBAAa;GAJrC,kBAAkB,CAsB9B","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtRefreshPayloadType } from './types/jwt-refresh-payload.type';\r\nimport { OrNeverType } from '../../utils/types/or-never.type';\r\nimport { AllConfigType } from 'src/config/config.type';\r\n\r\n@Injectable()\r\nexport class JwtRefreshStrategy extends PassportStrategy(\r\n  Strategy,\r\n  'jwt-refresh',\r\n) {\r\n  constructor(private configService: ConfigService<AllConfigType>) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: configService.get<string>('auth.refreshSecret', {\r\n        infer: true,\r\n      }),\r\n    });\r\n  }\r\n\r\n  public validate(\r\n    payload: JwtRefreshPayloadType,\r\n  ): OrNeverType<JwtRefreshPayloadType> {\r\n    if (!payload.sessionId) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    return payload;\r\n  }\r\n}\r\n"]}