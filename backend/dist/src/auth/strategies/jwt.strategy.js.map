{"version":3,"file":"jwt.strategy.js","sourceRoot":"/","sources":["src/auth/strategies/jwt.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,+CAAoD;AACpD,2CAAmE;AACnE,+CAAoD;AACpD,2CAA+C;AAMxC,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,IAAA,2BAAgB,EAAC,uBAAQ,EAAE,KAAK,CAAC;IAChE,YAAoB,aAA2C;QAC7D,KAAK,CAAC;YACJ,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,aAAa,EAAE;gBACpD,KAAK,EAAE,IAAI;aACZ,CAAC;SACH,CAAC,CAAC;QAPe,kBAAa,GAAb,aAAa,CAA8B;IAQ/D,CAAC;IAEM,QAAQ,CAAC,OAAuB;QACrC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;YAChB,MAAM,IAAI,8BAAqB,EAAE,CAAC;QACpC,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAA;AAlBY,kCAAW;sBAAX,WAAW;IADvB,IAAA,mBAAU,GAAE;qCAEwB,sBAAa;GADrC,WAAW,CAkBvB","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { OrNeverType } from '../../utils/types/or-never.type';\r\nimport { AllConfigType } from 'src/config/config.type';\r\nimport { JwtPayloadType } from './types/jwt-payload.type';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n  constructor(private configService: ConfigService<AllConfigType>) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: configService.get<string>('auth.secret', {\r\n        infer: true,\r\n      }),\r\n    });\r\n  }\r\n\r\n  public validate(payload: JwtPayloadType): OrNeverType<JwtPayloadType> {\r\n    if (!payload.id) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    return payload;\r\n  }\r\n}\r\n"]}