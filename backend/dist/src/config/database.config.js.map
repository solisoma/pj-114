{"version":3,"file":"database.config.js","sourceRoot":"/","sources":["src/config/database.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,2CAA4C;AAE5C,qDAQyB;AACzB,+EAAuD;AAEvD,MAAM,6BAA6B;CAoClC;AAjCC;IAFC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC;IACjD,IAAA,0BAAQ,GAAE;;mEACU;AAIrB;IAFC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,0BAAQ,GAAE;;oEACW;AAItB;IAFC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,0BAAQ,GAAE;;oEACW;AAOtB;IALC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,uBAAK,GAAE;IACP,IAAA,qBAAG,EAAC,CAAC,CAAC;IACN,IAAA,qBAAG,EAAC,KAAK,CAAC;IACV,IAAA,4BAAU,GAAE;;oEACS;AAKtB;IAHC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;wEACa;AAI1B;IAFC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,0BAAQ,GAAE;;oEACW;AAItB;IAFC,IAAA,4BAAU,EAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAClD,IAAA,0BAAQ,GAAE;;wEACe;AAI1B;IAFC,IAAA,2BAAS,GAAE;IACX,IAAA,4BAAU,GAAE;;2EACiB;AAGhC,kBAAe,IAAA,mBAAU,EAAiB,UAAU,EAAE,GAAG,EAAE;IACzD,IAAA,yBAAc,EAAC,OAAO,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;IAE3D,OAAO;QACL,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;QAC7B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;YAC7B,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC;YACzC,CAAC,CAAC,IAAI;QACR,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;QACvC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;QACvC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB,KAAK,MAAM;KACzD,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { registerAs } from '@nestjs/config';\r\nimport { DatabaseConfig } from './config.type';\r\nimport {\r\n  IsOptional,\r\n  IsInt,\r\n  Min,\r\n  Max,\r\n  IsString,\r\n  ValidateIf,\r\n  IsBoolean,\r\n} from 'class-validator';\r\nimport validateConfig from 'src/utils/validate-config';\r\n\r\nclass EnvironmentVariablesValidator {\r\n  @ValidateIf((envValues) => envValues.DATABASE_URL)\r\n  @IsString()\r\n  DATABASE_URL: string;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsString()\r\n  DATABASE_TYPE: string;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsString()\r\n  DATABASE_HOST: string;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsInt()\r\n  @Min(0)\r\n  @Max(65535)\r\n  @IsOptional()\r\n  DATABASE_PORT: number;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsString()\r\n  @IsOptional()\r\n  DATABASE_PASSWORD: string;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsString()\r\n  DATABASE_NAME: string;\r\n\r\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\r\n  @IsString()\r\n  DATABASE_USERNAME: string;\r\n\r\n  @IsBoolean()\r\n  @IsOptional()\r\n  DATABASE_SYNCHRONIZE: boolean;\r\n}\r\n\r\nexport default registerAs<DatabaseConfig>('database', () => {\r\n  validateConfig(process.env, EnvironmentVariablesValidator);\r\n\r\n  return {\r\n    url: process.env.DATABASE_URL,\r\n    type: process.env.DATABASE_TYPE,\r\n    host: process.env.DATABASE_HOST,\r\n    port: process.env.DATABASE_PORT\r\n      ? parseInt(process.env.DATABASE_PORT, 10)\r\n      : 5432,\r\n    password: process.env.DATABASE_PASSWORD,\r\n    name: process.env.DATABASE_NAME,\r\n    username: process.env.DATABASE_USERNAME,\r\n    synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\r\n  };\r\n});\r\n"]}