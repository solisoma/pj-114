{"version":3,"file":"data-source.js","sourceRoot":"/","sources":["src/database/data-source.ts"],"names":[],"mappings":";;;AACA,4BAA0B;AAC1B,qCAAwD;AAExD,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;AAE3D,MAAM,YAAY,GAAG,YAAY;IAC/B,CAAC,CAAC,SAAS,GAAG,kCAAkC;IAChD,CAAC,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAE3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AAE/B,QAAA,aAAa,GAAG,IAAI,oBAAU,CAAC;IAC1C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;IAC/B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;IAC7B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;IAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC7B,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC;QACzC,CAAC,CAAC,IAAI;IACR,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;IACvC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;IACvC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;IACnC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB,KAAK,MAAM;IACxD,UAAU,EAAE,KAAK;IACjB,mBAAmB,EAAE,IAAI;IACzB,OAAO,EAAE,IAAI;IACb,cAAc,EAAE,KAAK;IACrB,QAAQ,EAAE,CAAC,YAAY,CAAC;CACJ,CAAC,CAAC;AAExB,qBAAa,CAAC,UAAU,EAAE;KACvB,IAAI,CAAC,GAAG,EAAE;IACT,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;AACnD,CAAC,CAAC;KACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACb,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport 'reflect-metadata';\r\nimport { DataSource, DataSourceOptions } from 'typeorm';\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\n\r\nconst entitiesPath = isProduction\r\n  ? __dirname + '/../typeorm/entities/*.entity.js'\r\n  : __dirname + '/../**/*.entity{.ts,.js}'; \r\n\r\nconsole.log('Entities Path:', entitiesPath);\r\n\r\nexport const AppDataSource = new DataSource({\r\n  type: process.env.DATABASE_TYPE,\r\n  url: process.env.DATABASE_URL,\r\n  host: process.env.DATABASE_HOST,\r\n  port: process.env.DATABASE_PORT\r\n    ? parseInt(process.env.DATABASE_PORT, 10)\r\n    : 3306,\r\n  username: process.env.DATABASE_USERNAME,\r\n  password: process.env.DATABASE_PASSWORD,\r\n  database: process.env.DATABASE_NAME,\r\n  synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\r\n  dropSchema: false,\r\n  keepConnectionAlive: true,\r\n  logging: true,\r\n  connectTimeout: 30000,\r\n  entities: [entitiesPath],\r\n} as DataSourceOptions);\r\n\r\nAppDataSource.initialize()\r\n  .then(() => {\r\n    console.log('Data Source has been initialized!');\r\n  })\r\n  .catch((err) => {\r\n    console.error('Error during Data Source initialization:', err);\r\n  });\r\n"]}