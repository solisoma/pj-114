{"version":3,"file":"main.js","sourceRoot":"/","sources":["src/main.ts"],"names":[],"mappings":";;;;;AACA,yBAAuB;AACvB,uCAA2C;AAC3C,2CAAgD;AAChD,6CAAyC;AACzC,6CAAiE;AACjE,2CAA+C;AAE/C,sEAAsC;AACtC,0FAAqF;AACrF,oFAA2D;AAE3D,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACnE,GAAG,CAAC,UAAU,CAAC;QACb,MAAM,EAAE;YACN,uBAAuB;YACvB,+BAA+B;YAC/B,iCAAiC;SAClC;QACD,WAAW,EAAE,IAAI;KAClB,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CACL,IAAA,yBAAO,EAAC;QACN,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QAClC,MAAM,EAAE,KAAK;QACb,iBAAiB,EAAE,KAAK;QACxB,MAAM,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;KAC7B,CAAC,CACH,CAAC;IAEF,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA,sBAA4B,CAAA,CAAC,CAAC;IAE5D,GAAG,CAAC,eAAe,CACjB,aAAa,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAC1D;QACE,OAAO,EAAE,CAAC,GAAG,CAAC;KACf,CACF,CAAC;IAEF,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,CAAC,4BAAiB,CAAC,CAAC,CAAC;IAE1D,MAAM,OAAO,GAAG,IAAI,yBAAe,EAAE;SAClC,QAAQ,CAAC,WAAW,CAAC;SACrB,cAAc,CAAC,0CAA0C,CAAC;SAC1D,UAAU,CAAC,KAAK,CAAC;SACjB,aAAa,EAAE;SACf,MAAM,CAAC,MAAM,EAAE,qCAAqC,CAAC;SACrD,KAAK,EAAE,CAAC;IAEX,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC5D,uBAAa,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAE3C,MAAM,0BAA0B,GAAG,GAAG,CAAC,GAAG,CAAC,yDAA0B,CAAC,CAAC;IACvE,MAAM,0BAA0B,CAAC,YAAY,EAAE,CAAC;IAEhD,IAAI,CAAC;QAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,EAAE,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CACT,cAAc,aAAa,CAAC,UAAU,CAAC,aAAa,EAAE;gBACpD,KAAK,EAAE,IAAI;aACZ,CAAC,GAAG,CACN,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;AACH,CAAC;AACD,KAAK,SAAS,EAAE,CAAC","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport 'dotenv/config';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { ValidationPipe } from '@nestjs/common';\r\nimport { AppModule } from './app.module';\r\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { AllConfigType } from './config/config.type';\r\nimport session from 'express-session';\r\nimport { DatabaseInitializerService } from './database/database-initializer.service';\r\nimport validationOptions from './utils/validation-options';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, { logger: false });\r\n  app.enableCors({\r\n    origin: [\r\n      'http://localhost:3002',\r\n      'https://nobleassetmarkets.com',\r\n      'https://quantureinc.netlify.app',\r\n    ],\r\n    credentials: true,\r\n  });\r\n\r\n  app.use(\r\n    session({\r\n      secret: process.env.SESSION_SECRET,\r\n      resave: false,\r\n      saveUninitialized: false,\r\n      cookie: { maxAge: 36000000 },\r\n    }),\r\n  );\r\n\r\n  const configService = app.get(ConfigService<AllConfigType>);\r\n\r\n  app.setGlobalPrefix(\r\n    configService.getOrThrow('app.apiPrefix', { infer: true }),\r\n    {\r\n      exclude: ['/'],\r\n    },\r\n  );\r\n\r\n  app.useGlobalPipes(new ValidationPipe(validationOptions));\r\n\r\n  const options = new DocumentBuilder()\r\n    .setTitle('Connector')\r\n    .setDescription('Intuitive API for various web activities')\r\n    .setVersion('1.0')\r\n    .addBearerAuth()\r\n    .addTag('Auth', 'Endpoints related to authentication')\r\n    .build();\r\n\r\n  const document = SwaggerModule.createDocument(app, options);\r\n  SwaggerModule.setup('docs', app, document);\r\n\r\n  const databaseInitializerService = app.get(DatabaseInitializerService);\r\n  await databaseInitializerService.onModuleInit();\r\n\r\n  try {\r\n    // const PORT = configService.getOrThrow('app.port', { infer: true });\r\n    const PORT = process.env.PORT || 3000;\r\n    await app.listen(PORT, () => {\r\n      console.log(`Running on Port ${PORT}`);\r\n      console.log(\r\n        `Running in ${configService.getOrThrow('app.nodeEnv', {\r\n          infer: true,\r\n        })} `,\r\n      );\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nvoid bootstrap();\r\n"]}