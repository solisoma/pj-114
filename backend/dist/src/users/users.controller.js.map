{"version":3,"file":"users.controller.js","sourceRoot":"/","sources":["src/users/users.controller.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  HttpCode,\r\n  HttpStatus,\r\n  Inject,\r\n  Post,\r\n  Query,\r\n  Req,\r\n  Res,\r\n  UseGuards,\r\n  ValidationPipe,\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { Routes, Services } from 'src/utils/constants';\r\nimport { IUsersService } from './users';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { ChangePasswordDto } from './dto/changePasswordDto';\r\nimport {\r\n  adminChangeUserStatusDto,\r\n  DepositDto,\r\n  IdDto,\r\n  KycDto,\r\n  ProofDto,\r\n  transcDetailsDto,\r\n  TransferDto,\r\n  UserDto,\r\n} from './dto/user.general.dto';\r\nimport { NullableType } from '@app/utils/types/nullable.type';\r\nimport { User } from '@app/typeorm/entities/user.entity';\r\nimport { Transaction } from '@app/typeorm/entities/transaction.entity';\r\nimport { UpdateTrxDto } from '@app/transaction/dto/transactionDto';\r\nimport { TransactionService } from '@app/transaction/transaction.service';\r\nimport { UploadService } from '@app/upload/upload.service';\r\nimport { Referral } from '@app/typeorm/entities/referral.entity';\r\n\r\n@ApiTags('User')\r\n@Controller(Routes.USERS)\r\nexport class UsersController {\r\n  constructor(\r\n    @Inject(Services.USERS) private readonly userService: IUsersService,\r\n    private readonly trxService: TransactionService,\r\n    private readonly uploadService: UploadService,\r\n  ) {}\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('change-password')\r\n  @HttpCode(HttpStatus.NO_CONTENT)\r\n  @ApiOperation({ summary: 'Change Password' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Password successfully changed!',\r\n  })\r\n  async changePassword(\r\n    @Body() changePasswordDto: ChangePasswordDto,\r\n    @Req() req,\r\n  ): Promise<void> {\r\n    const userId = req.user.id;\r\n    return this.userService.changePassword(userId, changePasswordDto);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('change-user-status')\r\n  @HttpCode(HttpStatus.NO_CONTENT)\r\n  @ApiOperation({ summary: 'Change user status' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Status successfully changed!',\r\n  })\r\n  async changeUserStatus(\r\n    @Body() userDetail: adminChangeUserStatusDto,\r\n    @Req() req: any,\r\n  ): Promise<void> {\r\n    const userId = req.user.id;\r\n    return this.userService.adminChangeUserStatus(userId, userDetail);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Get('get-user')\r\n  @ApiOperation({ summary: 'Get user' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'User fetched successfully',\r\n  })\r\n  async getUser(\r\n    @Query(new ValidationPipe()) param: UserDto,\r\n  ): Promise<NullableType<User>> {\r\n    return this.userService.findOneUser({ id: Number(param.userId) });\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Get('get-trx')\r\n  @ApiOperation({ summary: 'Get transaction' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Transactions fetched successfully',\r\n  })\r\n  async getTrx(\r\n    @Query(new ValidationPipe()) param: IdDto,\r\n    @Req() req: any,\r\n  ): Promise<Transaction[]> {\r\n    const id = param.userId || req.user.id;\r\n    return this.userService.getTrx(Number(id), param.category);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Get('referrals')\r\n  @ApiOperation({ summary: 'Get referrals' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Referrals fetched successfully',\r\n  })\r\n  async getReferrals(@Req() req: any): Promise<Referral[]> {\r\n    const id = req.user.id;\r\n    return this.userService.getRefferrals(Number(id));\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Get('all-users')\r\n  @ApiOperation({ summary: 'Get users' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Users fetched successfully',\r\n  })\r\n  async getUsers(@Req() req: any): Promise<User[]> {\r\n    const {\r\n      user: { id },\r\n    } = req;\r\n    return this.userService.getAllUser(id);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('update-balance')\r\n  @HttpCode(HttpStatus.NO_CONTENT)\r\n  @ApiOperation({ summary: 'Update balance' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Balance updated successfully',\r\n  })\r\n  async updateBalance(\r\n    @Body() transcDetails: transcDetailsDto,\r\n    @Req() req: any,\r\n  ): Promise<void> {\r\n    const userId = req.user.id;\r\n    return this.userService.updateBalance(userId, transcDetails);\r\n  }\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('transfer')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'transfer' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Balance updated successfully',\r\n  })\r\n  async transfer(\r\n    @Body() transcDetails: TransferDto,\r\n    @Req() req: any,\r\n  ): Promise<void> {\r\n    const userId = req.user.id;\r\n    return this.userService.transfer(userId, transcDetails);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('withdraw')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'Update balance' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Balance updated successfully',\r\n  })\r\n  async withdraw(\r\n    @Body() transcDetails: DepositDto,\r\n    @Req() req: any,\r\n  ): Promise<Transaction> {\r\n    const userId = req.user.id;\r\n    return this.userService.withdraw(userId, transcDetails);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('deposit')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'Update balance' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Balance updated successfully',\r\n  })\r\n  async deposit(\r\n    @Body() transcDetails: DepositDto,\r\n    @Req() req: any,\r\n  ): Promise<Transaction> {\r\n    const userId = req.user.id;\r\n    return this.userService.deposit(userId, transcDetails);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('update/trx')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'Update balance' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'Balance updated successfully',\r\n  })\r\n  async updateTrxStatus(\r\n    @Body() transcDetails: UpdateTrxDto,\r\n  ): Promise<Transaction> {\r\n    return this.trxService.updateTrx(transcDetails.id, transcDetails);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('kyc')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'Update kyc' })\r\n  async handleKYC(\r\n    @Body() Details: KycDto,\r\n    @Req() req: any,\r\n    @Res() res: any,\r\n  ): Promise<void> {\r\n    await this.uploadService.getUploadMiddleware(\r\n      './src/public/kyc',\r\n      [\r\n        { name: 'front', maxCount: 1 }, // Handle 'front'\r\n        { name: 'back', maxCount: 1 }, // Handle 'back'\r\n      ],\r\n      ['png', 'jpeg', 'pdf'],\r\n    )(req, res);\r\n\r\n    const { id } = req.user;\r\n\r\n    Details = {\r\n      ...req.body,\r\n      front: req.files?.front ? req.files.front[0].path : '', // Handle 'front'\r\n      back: req.files?.back ? req.files.back[0].path : '', // Handle 'back'\r\n    };\r\n\r\n    return res.status(200).json(await this.userService.handleKYC(id, Details));\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Post('deposit/proof')\r\n  @HttpCode(HttpStatus.OK)\r\n  @ApiOperation({ summary: 'proof uploaded' })\r\n  async addDepositProof(\r\n    @Body() Details: ProofDto,\r\n    @Req() req: any,\r\n    @Res() res: any,\r\n  ): Promise<void> {\r\n    await this.uploadService.getUploadMiddleware(\r\n      './src/public',\r\n      [\r\n        { name: 'file', maxCount: 1 }, // Handle 'front'\r\n      ],\r\n      ['png', 'jpeg', 'pdf'],\r\n    )(req, res);\r\n\r\n    Details = {\r\n      ...req.body,\r\n      file: req.files?.file ? req.files.file[0].path : '', // Handle 'file'\r\n    };\r\n    console.log(req.body, req.files);\r\n    return res\r\n      .status(200)\r\n      .json(await this.userService.addDepositProof(Details));\r\n  }\r\n}\r\n"]}