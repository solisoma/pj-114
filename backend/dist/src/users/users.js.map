{"version":3,"file":"users.js","sourceRoot":"/","sources":["src/users/users.ts"],"names":[],"mappings":"","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { EntityCondition } from 'src/utils/types/entity-condition.type';\r\nimport { NullableType } from 'src/utils/types/nullable.type';\r\nimport { IPaginationOptions } from 'src/utils/types/pagination-options';\r\nimport { DeepPartial } from 'typeorm';\r\nimport { CreateUserDto } from './dto/createUserDto';\r\nimport { User } from 'src/typeorm/entities/user.entity';\r\nimport { ChangePasswordDto } from './dto/changePasswordDto';\r\nimport {\r\n  adminChangeUserStatusDto,\r\n  DepositDto,\r\n  KycDto,\r\n  ProofDto,\r\n  transcDetailsDto,\r\n  TransferDto,\r\n  TrxCategory,\r\n} from './dto/user.general.dto';\r\nimport { Transaction } from '@app/typeorm/entities/transaction.entity';\r\nimport { Referral } from '@app/typeorm/entities/referral.entity';\r\n\r\nexport interface IUsersService {\r\n  createUser(createUserDto: CreateUserDto): Promise<User>;\r\n  findOneUser(options: EntityCondition<User>): Promise<NullableType<User>>;\r\n  findUsersWithPagination(\r\n    paginationOptions: IPaginationOptions,\r\n  ): Promise<User[]>;\r\n  updateUser(id: User['id'], payload: DeepPartial<User>): Promise<User>;\r\n  adminChangeUserStatus(\r\n    id: number,\r\n    userDetail: adminChangeUserStatusDto,\r\n  ): Promise<void>;\r\n  updateBalance(id: number, transcDetails: transcDetailsDto): Promise<void>;\r\n  deleteUser(id: User['id']): Promise<void>;\r\n  saveUser(user: User): Promise<User>;\r\n  getAllUser(id: number): Promise<User[]>;\r\n  getTrx(id: number, category: TrxCategory): Promise<Transaction[]>;\r\n  handleKYC(id: number, details: KycDto): Promise<void>;\r\n  addDepositProof(proof: ProofDto): Promise<void>;\r\n  deposit(id: number, details: DepositDto): Promise<Transaction>;\r\n  withdraw(id: number, details: DepositDto): Promise<Transaction>;\r\n  transfer(id: number, trxDetails: TransferDto): Promise<void>;\r\n  getRefferrals(id: number): Promise<Referral[]>;\r\n  changePassword(\r\n    id: User['id'],\r\n    changePasswordDto: ChangePasswordDto,\r\n  ): Promise<void>;\r\n}\r\n"]}