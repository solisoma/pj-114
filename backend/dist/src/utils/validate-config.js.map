{"version":3,"file":"validate-config.js","sourceRoot":"/","sources":["src/utils/validate-config.ts"],"names":[],"mappings":";;AACA,yDAAiD;AACjD,qDAA+C;AAG/C,SAAS,cAAc,CACrB,MAA+B,EAC/B,iBAAsC;IAEtC,MAAM,eAAe,GAAG,IAAA,gCAAY,EAAC,iBAAiB,EAAE,MAAM,EAAE;QAC9D,wBAAwB,EAAE,IAAI;KAC/B,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,IAAA,8BAAY,EAAC,eAAe,EAAE;QAC3C,qBAAqB,EAAE,KAAK;KAC7B,CAAC,CAAC;IAEH,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,OAAO,eAAe,CAAC;AACzB,CAAC;AAED,kBAAe,cAAc,CAAC","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { plainToClass } from 'class-transformer';\r\nimport { validateSync } from 'class-validator';\r\nimport { ClassConstructor } from 'class-transformer/types/interfaces';\r\n\r\nfunction validateConfig<T extends object>(\r\n  config: Record<string, unknown>,\r\n  envVariablesClass: ClassConstructor<T>,\r\n) {\r\n  const validatedConfig = plainToClass(envVariablesClass, config, {\r\n    enableImplicitConversion: true,\r\n  });\r\n  const errors = validateSync(validatedConfig, {\r\n    skipMissingProperties: false,\r\n  });\r\n\r\n  if (errors.length > 0) {\r\n    throw new Error(errors.toString());\r\n  }\r\n  return validatedConfig;\r\n}\r\n\r\nexport default validateConfig;\r\n"]}